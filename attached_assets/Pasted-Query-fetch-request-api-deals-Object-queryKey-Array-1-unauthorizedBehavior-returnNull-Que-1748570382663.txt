Query fetch request: /api/deals 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query fetch request: /api/funds 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query fetch request: /api/deals/102 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query fetch request: /api/deals/102/stars 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
ProtectedRoute for /deals/:id: isLoading=false, user=Gonz
ProtectedRoute /deals/:id: Rendering component for user Gonz
Avatar color changed to: #D32F2F
Using /me endpoint data for avatar 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", ‚Ä¶}
Query Response from /api/notifications: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/notifications: 
(3) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
Query Response from /api/auth/me: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/auth/me: 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", ‚Ä¶}
Query Response from /api/deals/102/stars: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/deals/102/stars: 
Array []
Query Response from /api/notifications/unread-count: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/notifications/unread-count: 
Object {count: 0}
Query Response from /api/deals: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/deals: 
(91) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
Query Response from /api/funds: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/funds: 
(2) [{‚Ä¶}, {‚Ä¶}]
Query Response from /api/deals/102: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/deals/102: 
Object {id: 102, name: "9201 Winkler Light Industrial(Mazoch Capital)", description: "Winkler Light Industrial, a 53,735-square-foot industrial warehouse ‚Üµstrategically located in‚Ä¶", sector: "Real Estate", stage: "screening", ‚Ä¶}
UserAvatar: User 1 has color #4f46e5
UserAvatar: User 8 has color #388E3C
Query fetch request: /api/documents/deal/102 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
üîç useDealDocuments: Processing data for deal 102: undefined
‚ö†Ô∏è useDealDocuments: No data received or data is not an array: undefined
Query Response from /api/documents/deal/102: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/documents/deal/102: 
Array [{‚Ä¶}]
üîç useDealDocuments: Processing data for deal 102: 
Array [{‚Ä¶}]
üìù useDealDocuments: Setting 1 documents in context: 
Array [{‚Ä¶}]
üéØ useDealDocuments: Auto-selecting first document: 
Object {id: 61, name: "Confidential Offering Memorandum_9201 Winkler.pdf", fileName: "Confidential Offering Memorandum_9201 Winkler.pdf", fileType: "application/pdf", downloadUrl: "/api/documents/61/download", ‚Ä¶}
üì§ Loading PDF document: 
Object {documentId: 61, documentName: "Confidential Offering Memorandum_9201 Winkler.pdf", url: "/api/documents/61/download"}
üîç useDealDocuments: Processing data for deal 102: 
Array [{‚Ä¶}]
üìù useDealDocuments: Setting 1 documents in context: 
Array [{‚Ä¶}]
Direct user fetch for avatar ID 1: 
Object {id: 1, username: "admin", fullName: "Admin User", initials: "AU", email: "admin@example.com", ‚Ä¶}
Direct user fetch for avatar ID 8: 
Object {id: 8, username: "evankeppel", fullName: "Emily", initials: "Em", email: "evankeppel@doliveradvisors.com", ‚Ä¶}
Warning: Setting up fake worker.
Uncaught TypeError: Failed to fetch dynamically imported module: https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.8.69/pdf.worker.min.js
at blob:https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/132c5985-fc69-4b24-b668-72b488737d89:0:0
Warning: Error: Setting up fake worker failed: "Failed to fetch dynamically imported module: https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.8.69/pdf.worker.min.js".
at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:17465)
at new t (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:12630)
at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:32766)
at https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:34400
‚ùå PDF load error: 
Error {}
message: "Setting up fake worker failed: "Failed to fetch dynamically imported module: https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.8.69/pdf.worker.min.js"."
stack: "Error: Setting up fake worker failed: "Failed to fetch dynamically imported module: https://cdnjs.cloudflare.com/ajax/libs/pdf.js/4.8.69/pdf.worker.min.js".‚Üµ at https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/@fs/home/runner/workspace/node_modules/.vite/deps/react-pdf.js?v=85a46221:12337:36"
get stack: ∆í ()
set stack: ∆í ()
[[Prototype]]: Object

Using /me endpoint data for avatar 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", ‚Ä¶}
Direct user fetch for avatar ID 8: 
Object {id: 8, username: "evankeppel", fullName: "Emily", initials: "Em", email: "evankeppel@doliveradvisors.com", ‚Ä¶}
Direct user fetch for avatar ID 1: 
Object {id: 1, username: "admin", fullName: "Admin User", initials: "AU", email: "admin@example.com", ‚Ä¶}
