UserAvatar: User 8 has color #388E3C
UserAvatar: User 1 has color #F57C00
UserAvatar: User 10 has color #7B1FA2
Using /me endpoint data for avatar 
Object {id: 9, username: "sjackson", fullName: "Scott Jackson", initials: "SJ", email: "sjackson@doliveradvisors.com", …}
Query Response from /api/deals: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/deals: 
(96) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
Query Response from /api/auth/me: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/auth/me: 
Object {id: 9, username: "sjackson", fullName: "Scott Jackson", initials: "SJ", email: "sjackson@doliveradvisors.com", …}
ProtectedRoute for /users: isLoading=false, user=sjackson
ProtectedRoute /users: Rendering component for user sjackson
Query Response from /api/funds: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/funds: 
(2) [{…}, {…}]
Direct user fetch for avatar ID 4: 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", …}
Direct user fetch for avatar ID 5: 
Object {id: 5, username: "intern", fullName: "Intern User", initials: "IU", email: "intern@doliveradvisors.com", …}
Direct user fetch for avatar ID 8: 
Object {id: 8, username: "evankeppel", fullName: "Emily", initials: "Em", email: "evankeppel@doliveradvisors.com", …}
Direct user fetch for avatar ID 1: 
Object {id: 1, username: "admin", fullName: "Admin User", initials: "AU", email: "admin@example.com", …}
Direct user fetch for avatar ID 10: 
Object {id: 10, username: "Hzheng", fullName: "Huiyin Zheng", initials: "HZ", email: "hzheng@doliveradvisors.com", …}
API Request: DELETE /api/users/1 No data
Sending fetch request to /api/users/1 with options: 
Object {method: "DELETE", credentials: "include", body: undefined}
API Response from /api/users/1: 
Object {status: 403, statusText: "Forbidden", ok: false}
Error response from /api/users/1: 
Object {status: 403, data: {…}}

at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:17465)
at new t (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:12630)
at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:32766)
at https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:34400
Query fetch request: /api/users 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
ProtectedRoute for /users: isLoading=false, user=sjackson
ProtectedRoute /users: Rendering component for user sjackson
Query Response from /api/users: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/users: 
(6) [{…}, {…}, {…}, {…}, {…}, {…}]
Using /me endpoint data for avatar 
Object {id: 9, username: "sjackson", fullName: "Scott Jackson", initials: "SJ", email: "sjackson@doliveradvisors.com", …}
Direct user fetch for avatar ID 4: 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", …}
Direct user fetch for avatar ID 5: 
Object {id: 5, username: "intern", fullName: "Intern User", initials: "IU", email: "intern@doliveradvisors.com", …}
Direct user fetch for avatar ID 8: 
Object {id: 8, username: "evankeppel", fullName: "Emily", initials: "Em", email: "evankeppel@doliveradvisors.com", …}
Direct user fetch for avatar ID 1: 
Object {id: 1, username: "admin", fullName: "Admin User", initials: "AU", email: "admin@example.com", …}
Direct user fetch for avatar ID 10: 
Object {id: 10, username: "Hzheng", fullName: "Huiyin Zheng", initials: "HZ", email: "hzheng@doliveradvisors.com", …}
ProtectedRoute for /users: isLoading=false, user=sjackson
ProtectedRoute /users: Rendering component for user sjackson
