13 potential vulnerabilities found
Last ran on
 
9:42 am, May 22, 2025
Detected potential vulnerability in scripts/add-capital-call-constraints.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/add-capital-call-constraints.ts
    const callPctCheckResult = await pool.query(`
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'capital_calls' AND column_name = 'call_pct'
    `);
Detected potential vulnerability in scripts/add-capital-call-constraints.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/add-capital-call-constraints.ts
      await pool.query(`
        ALTER TABLE capital_calls 
        ADD COLUMN call_pct real
      `);
Detected potential vulnerability in scripts/add-capital-call-constraints.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/add-capital-call-constraints.ts
    const constraintCheckResult = await pool.query(`
      SELECT constraint_name
      FROM information_schema.table_constraints
      WHERE table_name = 'capital_calls' AND constraint_name = 'capital_calls_call_pct_check'
    `);
Detected potential vulnerability in scripts/add-capital-call-constraints.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/add-capital-call-constraints.ts
      await pool.query(`
        ALTER TABLE capital_calls
        ADD CONSTRAINT capital_calls_call_pct_check 
        CHECK (call_pct > 0 AND call_pct <= 100)
      `);
Detected potential vulnerability in scripts/add-capital-call-constraints.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/add-capital-call-constraints.ts
    const indexCheckResult = await pool.query(`
      SELECT indexname
      FROM pg_indexes
      WHERE tablename = 'capital_calls' AND indexname = 'unique_investment_due_date'
    `);
Detected potential vulnerability in scripts/add-capital-call-constraints.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/add-capital-call-constraints.ts
      await pool.query(`
        CREATE UNIQUE INDEX unique_investment_due_date
        ON capital_calls (allocation_id, due_date)
      `);
Detected potential vulnerability in scripts/add-capital-call-constraints.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/add-capital-call-constraints.ts
    await pool.query(`
      UPDATE capital_calls
      SET call_pct = call_amount
      WHERE amount_type = 'percentage' AND call_pct IS NULL
    `);
Detected potential vulnerability in scripts/add-capital-call-constraints.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/add-capital-call-constraints.ts
    await pool.query(`
      UPDATE capital_calls c
      SET call_pct = (c.call_amount / a.amount) * 100
      FROM fund_allocations a
      WHERE c.allocation_id = a.id
        AND c.amount_type = 'dollar'
        AND c.call_pct IS NULL
        AND a.amount > 0
    `);
Detected potential vulnerability in scripts/fix-capital-calls-and-closing-schedules.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/fix-capital-calls-and-closing-schedules.ts
    const amountTypeCheckResult = await pool.query(`
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'capital_calls' AND column_name = 'amount_type'
    `);
Detected potential vulnerability in scripts/fix-capital-calls-and-closing-schedules.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/fix-capital-calls-and-closing-schedules.ts
      await pool.query(`
        ALTER TABLE capital_calls 
        ADD COLUMN amount_type text DEFAULT 'percentage'
      `);
Detected potential vulnerability in scripts/fix-capital-calls-and-closing-schedules.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/fix-capital-calls-and-closing-schedules.ts
    const tableCheckResult = await pool.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_name = 'closing_schedule_events'
    `);
Detected potential vulnerability in scripts/fix-capital-calls-and-closing-schedules.ts
Use of sql.raw() with SQL string concatenation is not allowed as it may lead to SQL injection. Use parameterized queries with Drizzle's query builders instead.
scripts/fix-capital-calls-and-closing-schedules.ts
      await pool.query(`
        CREATE TABLE closing_schedule_events (
          id serial PRIMARY KEY,
          deal_id integer NOT NULL REFERENCES deals(id) ON DELETE CASCADE,
          event_type text NOT NULL,
          event_name text NOT NULL,
          scheduled_date timestamp NOT NULL,
          actual_date timestamp,
          target_amount real,
          amount_type text DEFAULT 'percentage',
          actual_amount real,
          status text NOT NULL DEFAULT 'scheduled',
          notes text,
          created_by integer NOT NULL REFERENCES users(id),
          created_at timestamp NOT NULL DEFAULT now(),
          updated_at timestamp NOT NULL DEFAULT now()
        )
      `);