Your deployed app is failing to display uploaded PDF documents due to several confirmed architectural and deployment-level bugs. Here's a clear breakdown of the root problems and fixes:

🔥 Primary Issues (Why PDFs Fail to Render in Production)
1. 🧠 PDF.js Worker Misconfiguration
Your app uses pdfjs-dist v4.8.69, but the code still tries to load a fake or incorrect worker from /pdf.worker.js, which doesn’t exist or match the version.

Console error: Failed to fetch dynamically imported module: pdf.worker.js?import.

✅ Fix:
Update setupPdfWorker.ts:

ts
Copy
Edit
import { pdfjs } from 'react-pdf';
import worker from 'pdfjs-dist/build/pdf.worker.min.js?url';

pdfjs.GlobalWorkerOptions.workerSrc = worker;
2. 💾 Upload Directory is Ephemeral
On Replit, anything written to process.cwd()/data/uploads/ is not persisted. So when Replit restarts, the uploaded files are gone—but the DB still thinks they exist.

✅ Fix:
Change your Multer destination to a persistent path:

ts
Copy
Edit
const UPLOAD_DIR = path.join(process.cwd(), 'replit-storage', 'uploads');
if (!fs.existsSync(UPLOAD_DIR)) fs.mkdirSync(UPLOAD_DIR, { recursive: true });
Make sure this directory is used in your upload route.

3. 🚫 Incorrect File Paths in DB and Download Logic
Files are stored with a leading slash (/uploads/file.pdf) but you're joining it as if it's a relative path (path.join('public', document.filePath)), which causes incorrect resolution like /uploads/... instead of public/uploads/....

✅ Fix:
Store filePath without the leading slash:

ts
Copy
Edit
const filePath = `uploads/${path.basename(req.file.path)}`;
4. 🔍 Download Route Doesn’t Fail Fast
It tries multiple file paths before failing. But by the time React-PDF gets the 404, it’s already trying to render and throws MissingPDFException.

✅ Fix:
Add an early existence check:

ts
Copy
Edit
if (!fs.existsSync(pathToFile)) {
  return res.status(404).json({ error: 'File not found', message: 'Please re-upload the document.' });
}
💡 Additional Improvements
✅ Memoize PDF Options
ts
Copy
Edit
const pdfOptions = useMemo(() => ({
  cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@4.8.69/cmaps/',
  cMapPacked: true,
  standardFontDataUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@4.8.69/standard_fonts/',
}), []);
✅ Improve Accessibility
Add aria-label on toolbar buttons (zoom, rotate, close, etc.).

✅ Action Plan Summary
Problem	Fix
PDF.js fake worker	Use ?url import to set pdfjs.GlobalWorkerOptions.workerSrc
Files disappear after restart	Change multer storage path to replit-storage/uploads
Path resolution errors	Remove leading / when saving paths in DB
Delayed 404 for missing PDFs	Check file existence early and return friendly error immediately
Options prop changes every render	Memoize options in <Document>
Poor accessibility	Add ARIA attributes to viewer controls

Once all of these are fixed, your deployed Replit app will correctly show uploaded PDFs, persist them between sessions, and have a robust, scalable document viewer. Let me know if you want code snippets for each change.










