Direct user fetch for avatar ID 5: 
Object {id: 5, username: "intern", fullName: "Intern User", initials: "IU", email: "intern@doliveradvisors.com", ‚Ä¶}
Query fetch request: /api/system/health 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query Response from /api/system/health: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/system/health: 
Object {status: "ok", timestamp: "2025-05-30T17:31:12.189Z", storage: "pg", databaseConnected: true, environment: "development", ‚Ä¶}
Query fetch request: /api/auth/me 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query Response from /api/auth/me: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/auth/me: 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", ‚Ä¶}
Using /me endpoint data for avatar 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", ‚Ä¶}
Direct user fetch for avatar ID 5: 
Object {id: 5, username: "intern", fullName: "Intern User", initials: "IU", email: "intern@doliveradvisors.com", ‚Ä¶}
Direct user fetch for avatar ID 1: 
Object {id: 1, username: "admin", fullName: "Admin User", initials: "AU", email: "admin@example.com", ‚Ä¶}
‚ö†Ô∏è Unknown document type: "test". Using fallback "Other".
üîç useDealDocuments: Processing data for deal 84: 
(2) [{‚Ä¶}, {‚Ä¶}]
üìù useDealDocuments: Setting 2 documents in context: 
(2) [{‚Ä¶}, {‚Ä¶}]
‚ö†Ô∏è Unknown document type: "test". Using fallback "Other".
üì§ Loading PDF document: 
Object {documentId: 64, documentName: "term_sheet.pdf", url: "/api/documents/64/download"}
üîç useDealDocuments: Processing data for deal 84: 
(2) [{‚Ä¶}, {‚Ä¶}]
üìù useDealDocuments: Setting 2 documents in context: 
(2) [{‚Ä¶}, {‚Ä¶}]
‚ö†Ô∏è Unknown document type: "test". Using fallback "Other".
‚úÖ PDF loaded successfully: 
Object {numPages: 5, documentName: "term_sheet.pdf"}
Using /me endpoint data for avatar 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", ‚Ä¶}
Direct user fetch for avatar ID 1: 
Object {id: 1, username: "admin", fullName: "Admin User", initials: "AU", email: "admin@example.com", ‚Ä¶}
Direct user fetch for avatar ID 5: 
Object {id: 5, username: "intern", fullName: "Intern User", initials: "IU", email: "intern@doliveradvisors.com", ‚Ä¶}
‚ö†Ô∏è Unknown document type: "test". Using fallback "Other".
üîç useDealDocuments: Processing data for deal 84: 
(2) [{‚Ä¶}, {‚Ä¶}]
üìù useDealDocuments: Setting 2 documents in context: 
(2) [{‚Ä¶}, {‚Ä¶}]
‚ö†Ô∏è Unknown document type: "test". Using fallback "Other".
ProtectedRoute for /deals/:id: isLoading=false, user=Gonz
ProtectedRoute /deals/:id: Rendering component for user Gonz
‚ö†Ô∏è Unknown document type: "test". Using fallback "Other".
Using /me endpoint data for avatar 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", ‚Ä¶}
Direct user fetch for avatar ID 5: 
Object {id: 5, username: "intern", fullName: "Intern User", initials: "IU", email: "intern@doliveradvisors.com", ‚Ä¶}
Direct user fetch for avatar ID 1: 
Object {id: 1, username: "admin", fullName: "Admin User", initials: "AU", email: "admin@example.com", ‚Ä¶}
Query fetch request: /api/system/health 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query Response from /api/system/health: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/system/health: 
Object {status: "ok", timestamp: "2025-05-30T17:31:42.438Z", storage: "pg", databaseConnected: true, environment: "development", ‚Ä¶}
Query fetch request: /api/auth/me 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query Response from /api/auth/me: 
Object {status: 200, statusText: "OK", ok: true}