Exception in mutation function: 
Error {}

at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:17465)
at new t (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:12630)
at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:32766)
at https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:34400
Allocation error: 
Error {}
message: "Invalid allocation data: Number must be less than or equal to 8388607"
stack: "Error: Invalid allocation data: Number must be less than or equal to 8388607↵ at Object.mutationFn (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/src/components/deals/AllocateFundModal.tsx:102:17)"
get stack: ƒ ()
set stack: ƒ ()
[[Prototype]]: Object

Allocation data being sent: 
Object {fundId: 2, dealId: 31, amount: 1500000, amountType: "dollar", securityType: "Venture", …}
Formatted data being sent: 
Object {fundId: 2, dealId: 31, amount: 1500000, amountType: "dollar", securityType: "Venture", …}
Sending API request to POST /api/allocations
API Request: POST /api/allocations 
Object {data: {…}}
Sending fetch request to /api/allocations with options: 
Object {method: "POST", credentials: "include", headers: {…}, body: "BODY_DATA"}
API Response from /api/allocations: 
Object {status: 201, statusText: "Created", ok: true}
API response received: 
Response {type: "basic", url: "https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/api/allocations", redirected: false, status: 201, ok: true, …}
Successful response, parsing JSON
Query fetch request: /api/deals 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query fetch request: /api/deals/62 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query fetch request: /api/funds 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query Response from /api/funds: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/funds: 
(2) [{…}, {…}]
Query Response from /api/deals: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/deals: 
(75) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
Query Response from /api/deals/62: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/deals/62: 
Object {id: 62, name: "Align Ventures Fund 2", description: "CPG venture seed fund, 15-16 investments", sector: "Venture", stage: "invested", …}
