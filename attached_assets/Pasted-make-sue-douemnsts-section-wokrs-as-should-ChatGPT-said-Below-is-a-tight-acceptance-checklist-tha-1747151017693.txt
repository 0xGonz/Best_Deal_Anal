make sue douemnsts section wokrs as should


ChatGPT said:
Below is a tight acceptance checklist that will make the Documents tab bullet‑proof in every fund and deal.
Work through the items in order; when they all pass, the module is “done”.

#	Area	What to verify / implement	How to test
1	API integrity	GET /api/documents/deal/:id returns { id, name, downloadUrl } for each row.	cURL the endpoint; response JSON must contain a valid downloadUrl.
2	Upload flow	- Upload a 5 MB PDF.
- API returns 201 + new row.
- File is saved in public/uploads/** (dev) or S3 (prod).	Upload via UI; confirm in Network tab and ls public/uploads.
3	Viewer rendering	- React‑PDF worker loads once (no “fake worker” warning).
- First page renders within 1 s.
- Toolbar arrows advance pages.
- Keyboard ←/→ also works.	Open any doc; flip pages; watch console.
4	Cache‑control	/download response has Cache-Control: no-store to stop stale PDFs.	DevTools → Headers; check cache directive.
5	Delete flow	Deleting a doc removes the DB row and clears selectedDocument so viewer shows “Select a document”.	Click delete; list refreshes; viewer blank.
6	Missing file guard	If file is manually deleted on disk, viewer toasts “Document missing” and removes list row (no dummy PDF).	rm public/uploads/<file> then reload page.
7	Drag‑and‑drop	Dragging a PDF onto sidebar triggers same upload mutation.	Drag file; row appears at top.
8	MIME / size validation	Non‑PDF or > 50 MB upload returns 400 unsupportedType or 413 tooLarge.	Try uploading PNG and 60 MB ISO; see toast error.
9	Mobile breakpoints	On 375 px wide device:
- Sidebar collapses to icon.
- Viewer canvas scales to width.	DevTools → responsive mode; inspect layout.
10	Accessibility	- Sidebar rows role="button" aria-label="View <name>"
- Viewer canvas aria-labelledby page counter.
- Delete button has aria-label="Delete <name>".	Use Axe dev‑tools; zero contrast/aria violations.
11	Unit tests	Vitest: mock upload → expect POST body FormData.
Vitest: viewer loads valid blob → onLoadSuccess fires with numPages > 0.	pnpm test all green.
12	Playwright smoke (CI)	Script: login → open deal → upload pdf → delete pdf → assert viewer blank.	GH Action runs on every PR.

Implementation snippets
Upload route guard

ts
Copy
Edit
if (!['application/pdf'].includes(file.mimetype))
  return res.status(400).json({ error: 'unsupportedType' });
if (file.size > 50 * 1024 * 1024)
  return res.status(413).json({ error: 'tooLarge' });
Cache header on download

ts
Copy
Edit
res.set('Cache-Control','no-store, must-revalidate');
Viewer toast on missing file

tsx
Copy
Edit
onLoadError={(err) => {
  if (err?.name === 'MissingPDFException') {
    toast.error('This document cannot be found (was it deleted?)');
    setDocs(prev => prev.filter(d => d.id !== current?.id));
    setCurrent(null);
  }
}}
After the checklist
When every green box passes in dev and in CI, the Documents section is fully integrated, modular, and future‑proof. Let me know which checklist item fails first—I'll drop the exact code patch for that spot.