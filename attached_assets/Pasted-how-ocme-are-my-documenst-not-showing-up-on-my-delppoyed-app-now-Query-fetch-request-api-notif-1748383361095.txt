how ocme are my documenst not showing up on my delppoyed app now --- Query fetch request: /api/notifications/unread-count {queryKey: Array(1), unauthorizedBehavior: 'returnNull'}
index-BZayGUNE.js:48 Query fetch request: /api/documents/deal/100 {queryKey: Array(1), unauthorizedBehavior: 'returnNull'}
index-BZayGUNE.js:48 Query Response from /api/system/health: {status: 200, statusText: '', ok: true}
index-BZayGUNE.js:48 Query data received from /api/system/health: {status: 'ok', timestamp: '2025-05-27T22:01:56.119Z', storage: 'pg', databaseConnected: true, environment: 'production',¬†‚Ä¶}
index-BZayGUNE.js:48 
            
            
            GET https://deal-flow-lifecyclev-1-bgonzalez9.replit.app/api/documents/deal/100 500 (Internal Server Error)
(anonymous) @ index-BZayGUNE.js:48
i @ index-BZayGUNE.js:48
v @ index-BZayGUNE.js:48
start @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
Vy @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
refetch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
batch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
(anonymous) @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
n @ index-BZayGUNE.js:48
index-BZayGUNE.js:48 Query Response from /api/documents/deal/100: {status: 500, statusText: '', ok: false}
index-BZayGUNE.js:48  Error response from /api/documents/deal/100: {status: 500, text: '{"message":"Failed to fetch documents"}'}status: 500text: "{\"message\":\"Failed to fetch documents\"}"[[Prototype]]: Object
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
i @ index-BZayGUNE.js:48
v @ index-BZayGUNE.js:48
start @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
Vy @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
refetch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
batch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
(anonymous) @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
n @ index-BZayGUNE.js:48
index-BZayGUNE.js:48  Exception during query fetch to /api/documents/deal/100: TypeError: Failed to execute 'text' on 'Response': body stream already read
    at Ole (index-BZayGUNE.js:48:43202)
    at index-BZayGUNE.js:48:44655
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
i @ index-BZayGUNE.js:48
v @ index-BZayGUNE.js:48
start @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
Vy @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
refetch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
batch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
(anonymous) @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
n @ index-BZayGUNE.js:48
index-BZayGUNE.js:48 Query Response from /api/notifications: {status: 200, statusText: '', ok: true}
index-BZayGUNE.js:48 Query Response from /api/notifications/unread-count: {status: 200, statusText: '', ok: true}
index-BZayGUNE.js:48 Query data received from /api/notifications: (2)¬†[{‚Ä¶}, {‚Ä¶}]
index-BZayGUNE.js:48 Query data received from /api/notifications/unread-count: {count: 2}
index-BZayGUNE.js:457 Current user data fetched successfully: {id: 4, username: 'Gonz', fullName: 'Brett Gonzalez', initials: 'BG', email: 'bgonzalez@doliveradvisors.com',¬†‚Ä¶}
index-BZayGUNE.js:48 Query Response from /api/deals/100/stars: {status: 200, statusText: '', ok: true}
index-BZayGUNE.js:48 Query data received from /api/deals/100/stars: []
index-BZayGUNE.js:48 Query fetch request: /api/documents/deal/100 {queryKey: Array(1), unauthorizedBehavior: 'returnNull'}
index-BZayGUNE.js:48 Query Response from /api/deals: {status: 200, statusText: '', ok: true}
index-BZayGUNE.js:48 Query data received from /api/deals: (89)¬†[{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
index-BZayGUNE.js:457 Using /me endpoint data for avatar {id: 4, username: 'Gonz', fullName: 'Brett Gonzalez', initials: 'BG', email: 'bgonzalez@doliveradvisors.com',¬†‚Ä¶}
index-BZayGUNE.js:48 Query Response from /api/funds: {status: 200, statusText: '', ok: true}
index-BZayGUNE.js:48 Query data received from /api/funds: (2)¬†[{‚Ä¶}, {‚Ä¶}]
index-BZayGUNE.js:48 Query Response from /api/deals/100: {status: 200, statusText: '', ok: true}
index-BZayGUNE.js:48 Query data received from /api/deals/100: {id: 100, name: 'Morgan Creek Digital Fund IV', description: 'Primarily equity investments in Digital \nInnovatio‚Ä¶gy companies with optionality for \nDigital Assets', sector: 'Venture', stage: 'screening',¬†‚Ä¶}
index-BZayGUNE.js:48 
            
            
            GET https://deal-flow-lifecyclev-1-bgonzalez9.replit.app/api/documents/deal/100 500 (Internal Server Error)
(anonymous) @ index-BZayGUNE.js:48
i @ index-BZayGUNE.js:48
v @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
Promise.then
(anonymous) @ index-BZayGUNE.js:48
Promise.catch
v @ index-BZayGUNE.js:48
start @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
Vy @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
refetch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
batch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
(anonymous) @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
n @ index-BZayGUNE.js:48
index-BZayGUNE.js:48 Query Response from /api/documents/deal/100: {status: 500, statusText: '', ok: false}
index-BZayGUNE.js:48  Error response from /api/documents/deal/100: {status: 500, text: '{"message":"Failed to fetch documents"}'}
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
i @ index-BZayGUNE.js:48
v @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
Promise.then
(anonymous) @ index-BZayGUNE.js:48
Promise.catch
v @ index-BZayGUNE.js:48
start @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
Vy @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
refetch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
batch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
(anonymous) @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
n @ index-BZayGUNE.js:48
index-BZayGUNE.js:48  Exception during query fetch to /api/documents/deal/100: TypeError: Failed to execute 'text' on 'Response': body stream already read
    at Ole (index-BZayGUNE.js:48:43202)
    at index-BZayGUNE.js:48:44655
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
i @ index-BZayGUNE.js:48
v @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
Promise.then
(anonymous) @ index-BZayGUNE.js:48
Promise.catch
v @ index-BZayGUNE.js:48
start @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
Vy @ index-BZayGUNE.js:48
fetch @ index-BZayGUNE.js:48
refetch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
batch @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
await in (anonymous)
(anonymous) @ index-BZayGUNE.js:48
onFocus @ index-BZayGUNE.js:48
(anonymous) @ index-BZayGUNE.js:48
n @ index-BZayGUNE.js:48
index-BZayGUNE.js:457 Direct user fetch for avatar ID 1: {id: 1, username: 'admin', fullName: 'Admin User', initials: 'AU', email: 'admin@example.com',¬†‚Ä¶}


ChatGPT said:
Thanks for the detailed trace ‚Äî this is incredibly helpful. You're hitting a 500 Internal Server Error on:

swift
Copy
Edit
GET /api/documents/deal/100
With the error:

pgsql
Copy
Edit
TypeError: Failed to execute 'text' on 'Response': body stream already read
This means:
üö® Your backend is trying to read the response body more than once ‚Äî which is not allowed in Node.js/Express.

üîç Diagnosis
The error:

ts
Copy
Edit
Failed to execute 'text' on 'Response': body stream already read
...usually happens when:

You call await res.text() and then later try res.json() or vice versa.

Your server route tries to send the same stream twice, or uses res.send() after a res.json() or res.end() call.

A document query handler catches an error and sends one response, but the error propagates and tries to send another.

‚úÖ How to Fix It
Open your server-side file: server/routes/documents.ts

Go to the route:

ts
Copy
Edit
GET /api/documents/deal/:dealId
Make sure it:

Uses only one response method (res.json(...), res.status(...).send(...), etc.)

Doesn't try to send a response after an error handler (e.g., in a catch block)

üîß Example of What NOT to Do:
ts
Copy
Edit
try {
  const docs = await getDocsFromDB();
  res.json(docs);
} catch (err) {
  res.status(500).json({ message: "Failed to fetch documents" });
  throw err; // ‚ùå Will trigger Express default error handler and try to respond again
}
‚úÖ Correct Way:
ts
Copy
Edit
try {
  const docs = await getDocsFromDB();
  res.json(docs);
} catch (err) {
  console.error("Fetch docs failed:", err);
  if (!res.headersSent) {
    res.status(500).json({ message: "Failed to fetch documents" });
  }
}
OR if you're using next() to let Express handle it:

ts
Copy
Edit
catch (err) {
  next(err); // ‚úÖ Let Express handle error middleware
}
üõ† Action Steps
Go to server/routes/documents.ts

Find this route:

ts
Copy
Edit
router.get('/deal/:dealId', async (req, res) => { ... });
Inspect the try/catch block. Add console.log() before every res.send() to trace.

Add if (!res.headersSent) check before sending errors.

‚úÖ Bonus Debug Tip
Add this above your route temporarily:

ts
Copy
Edit
router.use((req, res, next) => {
  console.log(`[üì• ${req.method}] ${req.originalUrl}`);
  next();
});
And inside the route:

ts
Copy
Edit
res.json(documents);
console.log("‚úÖ Sent document list");
