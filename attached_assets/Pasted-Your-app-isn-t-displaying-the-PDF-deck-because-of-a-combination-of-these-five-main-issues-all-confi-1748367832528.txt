Your app isn't displaying the PDF deck because of a combination of these five main issues, all confirmed in the debug output from your app and the analysis of your code:

🔧 1. PDF.js Worker Not Bundled Correctly (Main Issue)
What's broken: You’ve hardcoded the worker URL in setupPdfWorker.ts like this:

ts
Copy
Edit
pdfjs.GlobalWorkerOptions.workerSrc = '/pdf.worker.js';
Why this fails: Vite does not bundle this file correctly by default, causing React-PDF to fall back to a “fake worker,” which then throws the runtime error:

pgsql
Copy
Edit
Failed to fetch dynamically imported module: pdf.worker.js?import
✅ Fix:
Update your setup to let Vite bundle it automatically:

ts
Copy
Edit
import { pdfjs } from 'react-pdf';
import workerURL from 'pdfjs-dist/build/pdf.worker.min.js?url';

pdfjs.GlobalWorkerOptions.workerSrc = workerURL;
🧠 2. File Disappears After Upload (Replit/Ephemeral Storage)
What's broken: You’re saving uploads to a non-persistent path:

ts
Copy
Edit
path.join(process.cwd(), 'data', 'uploads')
Why this fails: Replit clears this on restart. So after a reload, the DB record exists but the file is physically gone → resulting in a MissingPDFException.

✅ Fix:
Update the multer destination to something persistent like:

ts
Copy
Edit
const UPLOAD_DIR = path.join(process.cwd(), 'replit-storage', 'uploads');
🛣 3. File Path Mismatch in Download Route
What's broken: You're storing filePath in the DB with a leading slash:

ts
Copy
Edit
filePath = "/uploads/<filename>"
But then you do:

ts
Copy
Edit
path.join(process.cwd(), 'public', document.filePath)
Why this fails: This resolves incorrectly to root (/uploads/...) instead of project-root/public/uploads/....

✅ Fix:
Store the path without a leading slash:

ts
Copy
Edit
filePath = `uploads/${path.basename(req.file.path)}`;
🔥 4. No Existence Check Before Streaming File
What's broken: Your API tries to stream the file immediately and only returns 404 after failing all fallback paths.

Why this fails: React-PDF still sees a generic error and throws MissingPDFException.

✅ Fix:
Add an explicit existence check:

ts
Copy
Edit
if (!fs.existsSync(foundPath)) {
  return res.status(404).json({ error: 'File not found' });
}
⚠️ 5. React-PDF <Document /> Gets New Options Every Render
What's broken: You define options={{ ... }} inline, so it re-renders constantly.

Why this fails: It triggers warnings and potential flickering in the PDF viewer.

✅ Fix:
Wrap options in useMemo:

ts
Copy
Edit
const pdfOptions = useMemo(() => ({
  cMapUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@4.8.69/cmaps/',
  cMapPacked: true,
  standardFontDataUrl: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@4.8.69/standard_fonts/',
}), []);
✅ Immediate Action Plan
✅ Fix setupPdfWorker.ts to use Vite bundling (this is the top priority)

🔁 Move uploaded files to a persistent directory

🧼 Fix stored filePath to remove leading slash

🧱 Add early existence check in download handler

🧠 Memoize options in React <Document> viewer