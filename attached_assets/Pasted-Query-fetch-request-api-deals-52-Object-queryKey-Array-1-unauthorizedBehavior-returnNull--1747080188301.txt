Query fetch request: /api/deals/52 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query fetch request: /api/deals/52/stars 
Object {queryKey: Array(1), unauthorizedBehavior: "returnNull"}
Query Response from /api/deals/52/stars: 
Object {status: 404, statusText: "Not Found", ok: false}
Error response from /api/deals/52/stars: 
Object {status: 404, text: "{"message":"Deal not found"}"}
status: 404
text: "{"message":"Deal not found"}"
[[Prototype]]: Object

Exception during query fetch to /api/deals/52/stars: 
TypeError {message: "Failed to execute 'text' on 'Response': body stream already read"}

at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:17465)
at new t (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:12630)
at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:32766)
at https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:34400
Query Response from /api/notifications/unread-count: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/notifications/unread-count: 
Object {count: 0}
Query Response from /api/system/health: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/system/health: 
Object {status: "ok", timestamp: "2025-05-12T20:02:44.934Z", storage: "pg", databaseConnected: true, environment: "development", …}
Query Response from /api/deals/52: 
Object {status: 404, statusText: "Not Found", ok: false}
Query Response from /api/auth/me: 
Object {status: 200, statusText: "OK", ok: true}
Error response from /api/deals/52: 
Object {status: 404, text: "{"message":"Deal not found"}"}
status: 404
text: "{"message":"Deal not found"}"
[[Prototype]]: Object

Exception during query fetch to /api/deals/52: 
TypeError {message: "Failed to execute 'text' on 'Response': body stream already read"}

at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:17465)
at new t (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:12630)
at t.value (https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:32766)
at https://3719d615-d375-4d11-b366-6e5abe95fce6-00-23dnoltc5ai2v.riker.replit.dev/__replco/static/devtools/eruda/3.2.3/eruda.js:2:34400
Query data received from /api/auth/me: 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", …}
Using /me endpoint data for avatar 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", …}
Query Response from /api/notifications: 
Object {status: 200, statusText: "OK", ok: true}
Query data received from /api/notifications: 
Array []
Using /me endpoint data for avatar 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", …}
Using /me endpoint data for avatar 
Object {id: 4, username: "Gonz", fullName: "Brett Gonzalez", initials: "BG", email: "bgonzalez@doliveradvisors.com", …}
